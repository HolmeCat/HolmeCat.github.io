<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://holmecat.github.io/</id>
    <title>福尔摩猫</title>
    <updated>2022-06-13T08:18:10.036Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://holmecat.github.io/"/>
    <link rel="self" href="https://holmecat.github.io/atom.xml"/>
    <subtitle>一个随便学习的卑微颓废</subtitle>
    <logo>https://holmecat.github.io/images/avatar.png</logo>
    <icon>https://holmecat.github.io/favicon.ico</icon>
    <rights>All rights reserved 2022, 福尔摩猫</rights>
    <entry>
        <title type="html"><![CDATA[关于 福尔摩猫]]></title>
        <id>https://holmecat.github.io/post/AboutStart/</id>
        <link href="https://holmecat.github.io/post/AboutStart/">
        </link>
        <updated>2021-12-28T03:51:52.000Z</updated>
        <content type="html"><![CDATA[<!-- more -->
<p>这是某个很菜的叫做<s>福尔摩猫</s>的博客</p>
<p>它目前并将长期处于无干货阶段，只有一些闲言碎语</p>
<p>用来做一种个人笔记</p>
<h2 id="入站指南">入站指南</h2>
<p>福尔摩猫，简称膜猫</p>
<p>他的博客目前提供以下话题</p>
<ul>
<li>拾枝杂谈</li>
<li>程序设计
<ul>
<li>C++</li>
<li>C#</li>
<li>Python</li>
</ul>
</li>
<li>数学和密码
<ul>
<li>应用密码学</li>
<li>最优化理论</li>
</ul>
</li>
</ul>
<p>请到<strong>分类</strong>当中点击关键词进入</p>
<h2 id="附录">附录</h2>
<h3 id="博客诞生更新日志">博客诞生（更新日志）</h3>
<p>2020-1-23<br>
这个博客终于是弄了一下，拖拉了很久很久很久很久的东西。<br>
2020-2-4<br>
将这个博客终于是重新弄了一下，其实就是换了个皮。<br>
2020-5-4<br>
将这个博客的简介重新写了一下。<br>
<strong>2020-7-27</strong><br>
以上是这半年以来小打小闹的记录。<br>
<strong>2021-4-14</strong><br>
考研结束。<br>
2021-8-20<br>
现在很普通<br>
2021-12-28<br>
折磨王<br>
2022-3-13<br>
不破不立</p>
<h2 id="markdown学习和使用">MarkDown学习和使用</h2>
<h3 id="定义">定义</h3>
<blockquote>
<p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。<br>
Markdown 语言在 2004 由约翰·格鲁伯（英语：John Gruber）创建。<br>
Markdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。<br>
Markdown 编写的文档后缀为 .md, .markdown。</p>
</blockquote>
<p>之前这里放着一段朴素学习MarkDown的心路历程</p>
<p>现在通过阅读《了不起的MarkDown》<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>这本书，系统地认识了一下MarkDown，安装了语法约束插件，现在写的相对规范了些。</p>
<p>希望深入用它写作，以及以后努力掌握<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>L</mi><mi>A</mi></msup><msub><mi>T</mi><mi>E</mi></msub><mi>X</mi></mrow><annotation encoding="application/x-tex">L^AT_EX</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.991331em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">E</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span></span></span></p>
<h2 id="开通小结">开通小结</h2>
<p>知行合一，万事胜意。</p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p>《了不起的MarkDown》毕小朋著 <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[最优化理论] 线性方程组的最小二乘解]]></title>
        <id>https://holmecat.github.io/post/[最优化理论] 线性方程组的最小二乘解/</id>
        <link href="https://holmecat.github.io/post/[最优化理论] 线性方程组的最小二乘解/">
        </link>
        <updated>2021-10-16T14:25:23.000Z</updated>
        <content type="html"><![CDATA[<p>本文涉及《最优化理论》的第2和12章<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup><br>
关于线性代数的基本线性方程组，以及引出的最小二乘优化问题</p>
<h2 id="线性方程组的解问题描述">线性方程组的解问题描述</h2>
<p>有一个线性方程组</p>
<p>[<br>
f(x) =<br>
\begin{cases}<br>
x + y = 1 \<br>
x - y = 1 \<br>
x + 2y = 3<br>
\end{cases}<br>
]</p>
<p>也可以表述成为矩阵形式<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mi>x</mi><mo>=</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">Ax = b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span></p>
<p>[<br>
\begin{pmatrix}<br>
1 &amp; 1 \<br>
1 &amp; -1 \<br>
1 &amp; 2<br>
\end{pmatrix}<br>
\begin{pmatrix}<br>
x \ y<br>
\end{pmatrix}=<br>
\begin{pmatrix}<br>
1 \ 1 \ 3<br>
\end{pmatrix}<br>
]<br>
通常我们可以求出一个<strong>精确解</strong><br>
但这个根据线性代数的理论，<strong>无解</strong><br>
那么，我们试图可以求出一个<strong>近似解</strong>来<br>
解的方法有两种，分别是</p>
<ul>
<li>最小二乘法</li>
<li>矩阵技巧法</li>
</ul>
<h2 id="最小二乘法和矩阵法求解的等价性">最小二乘法和矩阵法求解的等价性</h2>
<p>解的形式：<br>
[<br>
x = (A<sup>TA)</sup>{-1}A^Tb<br>
]</p>
<h3 id="矩阵技巧法">矩阵技巧法</h3>
<p>即在方程左右同乘一个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>A</mi><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">A^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span><br>
[<br>
\begin{align*}<br>
A^TAx &amp;= A^Tb \<br>
\therefore{} x &amp;= (A<sup>TA)</sup>{-1}A^Tb<br>
\end{align*}<br>
]</p>
<h3 id="最小二乘法">最小二乘法</h3>
<p>问题本身可以转化为求解<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mi>x</mi><mo>−</mo><mi>b</mi><mo>=</mo><mi>O</mi></mrow><annotation encoding="application/x-tex">Ax - b = O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span></span></span></span><br>
但是没有精确解，此处已经说明过要求近似解<br>
那么，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mi>x</mi><mo>−</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">Ax - b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>本身是一个向量，要想贴近零向量<br>
则可以令<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mi>x</mi><mo>−</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">Ax - b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>的模长达到最短，即最接近<br>
<strong>因此，问题描述变为了求:</strong><br>
[<br>
min_{x \in R^n}{\Vert Ax - b\Vert ^2_2}<br>
]<br>
<strong>求解过程如下：</strong><br>
[<br>
\begin{align*}<br>
\frac{d{\Vert Ax - b\Vert ^2_2}}{dx}<br>
&amp;= \frac{df(x)}{dx} = 0 \<br>
f(x)<br>
&amp;= (Ax - b)^T(Ax - b) \<br>
&amp;= x<sup>TA</sup>TAx - x<sup>TA</sup>Tb - b^TAx + b^Tb \<br>
&amp;= \Vert Ax \Vert ^2_2 - 2b^TAx + \Vert b \Vert ^2_2 \<br>
\frac{df(x)}{dx}<br>
&amp;= \frac{d(x<sup>TA</sup>TAx)}{dx} - \frac{d(2b^TAx)}{dx} = 0 \<br>
\therefore 2A^TAx &amp;= 2A^Tb \<br>
x &amp;= (A<sup>TA)</sup>{-1}A^Tb<br>
\end{align*}<br>
]<br>
可见解的形式相同，两种解法是等价的</p>
<h2 id="投影的变换矩阵确认">投影的变换矩阵确认</h2>
<p>接下来，希望找到一个矩阵变化<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span><br>
将向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>经过变换之后使得<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>b</mi></mrow><annotation encoding="application/x-tex">Pb</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">b</span></span></span></span>在A变换映射的平面内<br>
即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>b</mi></mrow><annotation encoding="application/x-tex">Pb</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">b</span></span></span></span>成为了<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>在该平面的投影,因为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">x^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.688696em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>是符合方程的最近似解</p>
<p><strong>求解过程如下：</strong><br>
投影向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>b</mi></mrow><annotation encoding="application/x-tex">Pb</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">b</span></span></span></span>即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><msup><mi>x</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">Ax^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.688696em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>,所以根据前文可得<br>
[<br>
P = A(A<sup>TA)</sup>{-1}A^T<br>
]<br>
可代入验证得<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>=</mo><mo>(</mo><mi>P</mi><mi>b</mi><msup><mo>)</mo><mi>T</mi></msup><mo>(</mo><mi>b</mi><mo>−</mo><mi>P</mi><mi>b</mi><mo>)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">=(Pb)^T(b - Pb) = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">b</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>,本文省略<br>
下面将会证明<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>b</mi><mo>=</mo><mi>A</mi><msup><mi>x</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">Pb = Ax^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.688696em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>，该近似解经过映射后确实成为了投影<br>
即距离b最接近的向量</p>
<h2 id="最小2范数解的证明">最小2范数解的证明</h2>
<p>到这一步，证明一下<br>
[<br>
x^<em>= (A<sup>TA)</sup>{-1}A^Tb<br>
]<br>
的唯一性<br>
即本文的主要问题：该解经过变换后是b的投影，与b为唯一最近似解<br>
证明如下：从最小2范数解的2范数出发<br>
[<br>
\begin{align</em>}<br>
\Vert Ax - b \Vert ^2_2<br>
&amp;= \Vert A(x - x^<em>) + (Ax^</em>- b)\Vert ^2_2 \<br>
&amp;= (A(x - x^<em>) + (Ax^</em>- b))^T(A(x - x^<em>) + (Ax^</em>- b)) \<br>
&amp;= \Vert A(x-x^<em>) \Vert ^2_2 + \Vert Ax^</em> - b\Vert ^2_2<br>
+ 2(A(x - x<sup>*))</sup>T(Ax^* - b) \<br>
\Vert A(x-x^<em>) \Vert ^2_2 &amp;\geqslant 0 \<br>
\because x^</em>&amp;= (A<sup>TA)</sup>{-1}A^Tb \<br>
\therefore 2(A(x - x<sup>*))</sup>T(Ax^<em>- b)<br>
&amp;= 2(A(x - (A<sup>TA)</sup>{-1}A<sup>Tb))</sup>T((A(A<sup>TA)</sup>{-1}A^T - I)b) \<br>
&amp;= 2(A(x - (A<sup>TA)</sup>{-1}A<sup>Tb))</sup>T((AA<sup>{-1}(A</sup>T)<sup>{-1}A</sup>T - I)b) \<br>
&amp;= 0\ \<br>
\therefore \Vert Ax - b\Vert ^2_2 &amp;\geqslant \Vert Ax^</em>- b \Vert ^2_2<br>
\end{align*}<br>
]<br>
证明完毕</p>
<h2 id="最后说明">最后说明</h2>
<p>最终，通过矩阵技巧法可以轻易得到最近似解<br>
求解过程不是很复杂<br>
但是结合最小二乘的数学理解，向量投影的矩阵理解后<br>
能够稍微深入以下这个线性方程组的优化问题</p>
<p>本文以上内容并不是严谨的数学证明<br>
相关资料和博客网上也有很多<br>
所以建议阅读的时候多多思考，但是不要拘泥于表述的严格性<br>
本身也就是我自己学习理解的笔记</p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p>《最优化理论》 Edwin K. P. Chong Stanislaw H. Zak 著 <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Python] PTA一道想留下来的入门语法题]]></title>
        <id>https://holmecat.github.io/post/[Python] PTA一道想留下来的入门语法题/</id>
        <link href="https://holmecat.github.io/post/[Python] PTA一道想留下来的入门语法题/">
        </link>
        <updated>2021-08-27T14:12:10.000Z</updated>
        <content type="html"><![CDATA[<h2 id="python入门语法题">Python入门语法题</h2>
<p>本题是我觉得基础题里面非常有意思的一道题目</p>
<p>最终改出来的代码非常简洁</p>
<p>涉及到了知识点都很简单，但比较多，有助于理解活用</p>
<h2 id="字典合并-40分">字典合并 (40分)</h2>
<p>输入用字符串表示两个字典，输出合并后的字典。字典的键用一个字母或数字表示。注意：1和‘1’是不同的关键字！</p>
<h3 id="输入格式">输入格式</h3>
<p>在第一行中输入第一个字典字符串；<br>
在第二行中输入第二个字典字符串。</p>
<h3 id="输出格式">输出格式</h3>
<p>在一行中输出合并的字典，输出按字典序。<br>
&quot;1&quot; 的 ASCII 码为 49，大于 1，排序时 1 在前，&quot;1&quot; 在后。其它的字符同理。</p>
<h3 id="输入样例1">输入样例1</h3>
<p>在这里给出一组输入。例如：</p>
<pre><code class="language-python">{1:3, 2:5}
{1:5, 3:7}
</code></pre>
<h3 id="输出样例1">输出样例1</h3>
<p>在这里给出相应的输出。例如：</p>
<pre><code class="language-python">{1:8, 2:5, 3:7}
</code></pre>
<h3 id="输入样例2">输入样例2</h3>
<p>在这里给出一组输入。例如：</p>
<pre><code class="language-python">{&quot;1&quot;:3, 1:4}
{&quot;a&quot;:5, &quot;1&quot;:6}
</code></pre>
<h3 id="输出样例2">输出样例2</h3>
<p>在这里给出相应的输出。例如：</p>
<pre><code class="language-python">{1:4, &quot;1&quot;:9, &quot;a&quot;:5}
</code></pre>
<h3 id="解题思路和细节处理">解题思路和细节处理</h3>
<p>本题解题思路不难，主要是处理细节<br>
题目本身就是将两个字典相同键的值相加，合并成一个字典</p>
<p>输入的内容正好可以由eval函数经字符串解析成字典结构</p>
<p>然后通过循环，将一个字典的键值对放入另一个字典中<br>
即存在键则相加值，不存在键则添入键值</p>
<p>最后通过排序函数进行字典序排序，得到结果</p>
<h4 id="涉及到的细节知识有">涉及到的细节知识有</h4>
<ul>
<li>eval字符串解析函数</li>
<li>循环遍历字典</li>
<li>sorted函数使用，返回值是经过排序的list
<ul>
<li>lambda表达式，单句函数</li>
<li>字典的items方法返回键值对list</li>
<li>ord函数返回ascii码值，type判断类型，str代表字符串</li>
</ul>
</li>
<li>dict函数由list建立字典</li>
<li>print函数中涉及到replace把空格和字符的'号给消除掉</li>
</ul>
<p>代码给人一种麻雀虽小，五脏俱全的感觉<br>
在合并的时候并不考虑字典序问题<br>
但是排序需要输入list，然后用lambda表达式来定义排序标准<br>
返回的list,又要转换成字典<br>
最后，因为题目要求，python输出的字典字符串<br>
还得消除掉多余的符号和空格</p>
<p>以上解题方案，不考虑性能</p>
<h3 id="解题代码不带注释">解题代码（不带注释）</h3>
<pre><code class="language-python">def main():
    a = eval(input())
    b = eval(input())
    for key, value in b.items():
        if key in a:
            a[key] += value
        else:
            a[key] = value         
    result = dict(sorted(a.items(), key = lambda x: ord(x[0]) if type(x[0]) == str else x[0]))
    print(str(result).replace(&quot;'&quot;, &quot;\&quot;&quot;).replace(&quot; &quot;, &quot;&quot;))
    return    

main()
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[C++] 算法题常用基础小知识]]></title>
        <id>https://holmecat.github.io/post/[C++] 算法题常用基础小知识/</id>
        <link href="https://holmecat.github.io/post/[C++] 算法题常用基础小知识/">
        </link>
        <updated>2020-08-15T09:06:29.000Z</updated>
        <summary type="html"><![CDATA[<p>这里记载了一些最最基础的C++刷题小知识<br>
结合了网上的一些经验帖子，多多避坑<br>
因为这些一直会忘又比较琐碎，所以统计在此</p>
]]></summary>
        <content type="html"><![CDATA[<p>这里记载了一些最最基础的C++刷题小知识<br>
结合了网上的一些经验帖子，多多避坑<br>
因为这些一直会忘又比较琐碎，所以统计在此</p>
<!-- more -->
<h2 id="语法">语法</h2>
<h3 id="组合头文件bitsstdch">组合头文件&lt;bits/stdc++.h&gt;</h3>
<p>C++当中提供了一个多功能的头文件，几乎涵盖了所有非常常用和标准化STL的头文件，常用的可以不再需要一个个引入了。</p>
<pre><code class="language-cpp">#include&lt;bits/stdc++.h&gt;
</code></pre>
<h3 id="提高执行速度的小手段解除同步">提高执行速度的小手段：解除同步</h3>
<p>C++的标准输入输出流cin/cout和C语言原生的stdio.h/cstdio头文件相关输入输出有同步机制，这样会限制cin/cout的运行速度。解除cin/cout同步，可较大加快cin/cout运行速度，语句如下：</p>
<pre><code class="language-cpp">ios::sync_with_stdio(false);
</code></pre>
<p>这样速度几乎达到一致，不过可能C++还是会慢一点点</p>
<h3 id="读入一整行的方法">读入一整行的方法</h3>
<pre><code class="language-cpp">string s;
getline(cin,s);
</code></pre>
<p>第一个参数cin是istream对象，代表标准输入<br>
第二个参数s是string类型的字符串<br>
<strong>注意，getline和cin在处理换行符上有些区别，所以要是混用注意利用getchar清空缓冲区</strong><br>
其它C/C++获取输入的手段在此不列，还有很多，包括控制台输入和文件输入等。</p>
<h3 id="输出格式设定">输出格式设定</h3>
<p>C语言的printf支持正则表达式匹配来设定，C++的cout则是通过函数来设定，比较繁琐。</p>
<pre><code class="language-cpp">cout &lt;&lt; fixed &lt;&lt; setprecision(2);
cout &lt;&lt; setw(2) &lt;&lt; setfill('0');
</code></pre>
<ul>
<li>fixed代表固定小数点输出，setprecision代表输出有效数字位数。<br>
以上两者结合可以固定小数点后有效输出位数。</li>
<li>setw(2)代表输出宽度规定为2，setfill('0')代表用0填充不足区域。</li>
</ul>
<p>两者结合可以设定当内容不足输出宽度时，用setfill的参数内容来填充不足区段。</p>
<h2 id="数学">数学</h2>
<h3 id="最大公因数递归模板">最大公因数递归模板</h3>
<p>求两个整数最大公因数的函数，根据欧几里得辗转相除法得来<br>
学初等数论的时候已经写过非递归的版本，这个递归模板比较简洁</p>
<pre><code class="language-cpp">long long gcd(long long  a,long long b){// 求最大公因数
    return b == 0 ? a : gcd(b, a % b);
}
</code></pre>
<h2 id="算法">算法</h2>
<p>以下以头文件+算法的格式给出相关调用和说明。<br>
如果使用万能头文件则不用引入，不过最好知道一下。</p>
<h3 id="cmath二分查找">&lt;cmath&gt;：二分查找</h3>
<p>C语言中的math.h头文件，C++中写作cmath来引入。</p>
<pre><code class="language-cpp">int result;
result = lower_bound(begin, end, num); //大于等于
result = upper_bound(begin, end, num); //大于
result = lower_bound(begin, end, num, greater&lt;type&gt;()); //小于等于
result = upper_bound(begin, end, num, greater&lt;type&gt;()); //小于
</code></pre>
<p>bound函数说明：从数组的begin位置到end-1位置二分查找第一个大于（或等于）num的数字，找到返回该数字的地址，不存在则返回end。通过返回的地址减去起始地址begin,得到找到数字在数组中的下标。</p>
<p>第四个参数是自定义查找条件函数。注意这是比较条件，因此和查找条件是反的，找到意味着“不必再比”。</p>
<p>在从大到小的排序数组中，通过第四个参数调用重载lower_bound()和upper_bound()，如代码后两行。</p>
<h3 id="memoryh快速写内存">&lt;memory.h&gt;：快速写内存</h3>
<pre><code class="language-cpp">memset(str, c, n);
</code></pre>
<p>复制字符 c（一个无符号字符）到参数 str 所指向的字符串的前 n 个字符。</p>
<h3 id="algorithm快速排序">&lt;algorithm&gt;：快速排序</h3>
<pre><code class="language-cpp">sort(begin, end, cmp);
</code></pre>
<p>排序，无论是数组还是STL容器都可以，输入参数为起始地址，结束地址，比较函数cmp</p>
<p>结束地址是结尾地址后的那个，比如0-n-1的数组结尾就是n</p>
<p>cmp默认是升序函数，也可以自定义函数然后作为参数写入，也可以利用下面头文件中的函数</p>
<h3 id="algorithm快速填充">&lt;algorithm&gt;：快速填充</h3>
<pre><code class="language-cpp">fill(G[0], G[0] + MAX_N * MAX_N, value)；
</code></pre>
<p>第一个参数是数字首地址，第二个参数是数组首地址+填充大小，第三个参数是填充内容<br>
这是一个二维数组的例子，要注意。<br>
更好的快速初始化方案，将value的内容填充到一段内存地址中。</p>
<h3 id="functional升降序函数">&lt;functional&gt;：升降序函数</h3>
<p>这里提供了很多系统功能函数，最常用的两个是升序和降序函数，如下调用即可。</p>
<ul>
<li>greater&lt;int&gt;(); 升序函数</li>
<li>less&lt;int&gt;(); 降序函数</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[应用密码学] 散列函数和消息鉴别]]></title>
        <id>https://holmecat.github.io/post/[应用密码学] 散列函数和消息鉴别/</id>
        <link href="https://holmecat.github.io/post/[应用密码学] 散列函数和消息鉴别/">
        </link>
        <updated>2020-05-11T07:37:47.000Z</updated>
        <content type="html"><![CDATA[<!-- more -->
<p>信息安全专业应该是必修的选修，现代密码学<br>
此系列博客是对这门课的要点补记，说穿了就是老师划下的重点<br>
不是笔记因为没记。。。最多加上一些自己的思考。<br>
第九章  散列函数和消息隐藏</p>
<!-- more -->
<h2 id="散列函数">散列函数</h2>
<p>以下介绍散列函数的相关概念</p>
<h3 id="hash函数主要功能和用途">Hash函数主要功能和用途</h3>
<p>提供有效的数据完整性检验</p>
<ul>
<li>单向加密<br>
通过加密结果不可逆向计算得到明文 ，用户的口令加密，隐私保护</li>
<li>实现完整性验证<br>
发票验证，下载数据验证，网站防篡改</li>
<li>数据压缩</li>
</ul>
<p>无论源文件或者信息多大，哈希过以后的长度都是256比特。</p>
<p>数据指纹，在数字签名中，消息的签名其实是对消息散列值的加密产生的，而不是消息本身。</p>
<h3 id="概念">概念</h3>
<p>Hash函数是一个将任意长度的消息序列映射为较短的、固定长度的一个值的函数。</p>
<p>密码学上的Hash函数能够保障数据的完整性。</p>
<p>通常被用来构造数据的“指纹”（即函数值），当被检验的数据发生改变的时候，对应的“指纹”信息也将发生变化。</p>
<h3 id="安全性">安全性</h3>
<p>对于一个散列函数，以下问题应当是难解的</p>
<ul>
<li>原像问题<br>
即从函数返回值y去找到函数参数x<br>
不能有效找到的话，即称为单向的或原像稳固的</li>
<li>碰撞问题</li>
</ul>
<p>即找到两个函数参数x和x'，它们的函数值y相等<br>
不能有效找到的话，即成为碰撞稳固的</p>
<h3 id="分类">分类</h3>
<ul>
<li>简单的Hash函数</li>
<li>密钥的Hash函数，通常作为消息认证码MAC</li>
</ul>
<h4 id="带密钥的hash函数">带密钥的Hash函数</h4>
<p>X：消息集合，Y：消息摘要有限集合，K：密钥集合<br>
对任意的k∈K，都存在一个Hash函数<br>
存在Hk(x) = y的话，则(x,y)称为在密钥k下有效</p>
<h3 id="生日攻击">生日攻击</h3>
<p>Hash函数就是为了防止修改消息的攻击方式，而生日攻击就是一种典型</p>
<p>基于概率论问题，“一个班级内至少要有多少人，两个人同一天生日概率大于1/2”</p>
<p>答案是只要有23认人，此时X是学生，Y是日期，可见俩不同学生却是一天生日</p>
<p>所以，由此可见，要保证消息摘要对碰撞问题是安全的，则安全消息摘要的长度就有一个下界</p>
<h3 id="迭代的hash函数">迭代的Hash函数</h3>
<p>和分组加密的工作模式类似，对所有数据进行迭代处理。后一组要和前一组有关。</p>
<h2 id="md5">MD5</h2>
<p>MD5以512位的分组长度来处理消息，每一个分组又被划分为<strong>16个32位</strong>的子分组。</p>
<p>算法的输出由<strong>4个32位</strong>的分组组成，它们串联成一个128位的消息摘要。</p>
<p>MD5将任意长度的“字节串”变换成一个128bit的大整数，并且是一个不可逆的字符串变换算法。</p>
<h3 id="md5算法描述">MD5算法描述</h3>
<h3 id="性质">性质</h3>
<p>Hash函数的每一位均是输入消息序列中每一位的函数。保证了在Hash函数计算过程中产生基于消息 x 的混合重复，从而使得生成的Hash函数结果混合得非常理想。也就是说，随机选取两个有着相似规律性的两组消息序列，也很难产生相同的Hash函数值。</p>
<h2 id="sha-1">SHA-1</h2>
<p>目前，MD5算法被广泛应用于各种领域，从密码分析的角度上看，MD5仍然被认为是一种易受到攻击的算法，而且，近年来对MD5攻击的相关研究已取得了很大的进展。2004年，我国学者王小云给出了一种解决MD5碰撞问题的算法。因此，有必要用一个具有更长消息摘要和更能抵御已知密码分析攻击的Hash函数来代替目前被广泛使用的MD5算法。下面介绍的安全Hash算法（Security Hash algorithm）――SHA-1</p>
<h3 id="sha-1算法描述">SHA-1算法描述</h3>
<h3 id="与md5的比较">与MD5的比较</h3>
<table>
<thead>
<tr>
<th>比较项</th>
<th>内容</th>
</tr>
</thead>
<tbody>
<tr>
<td>抗穷举搜索攻击的强度</td>
<td>SHA-1强</td>
</tr>
<tr>
<td>速度</td>
<td>MD5运算速度快</td>
</tr>
<tr>
<td>简洁与紧致性</td>
<td>都较为简单</td>
</tr>
<tr>
<td>小数在前结构与大数在前结构</td>
<td>MD5使用小数在前方案来解释32bit字序列的报文，而SHA-1 则使用大数在前</td>
</tr>
</tbody>
</table>
<h2 id="md5和sha-1都不是完美的">MD5和SHA-1都不是完美的</h2>
<p>2004年8月17日的美国加州圣巴巴拉的国际密码学会议（Crypto’2004）上，来自中国山东大学的王小云教授做了破译MD5、HAVAL-128、MD4和RIPEMD算法的报告，公布了MD系列算法的破解结果。宣告了固若金汤的世界通行密码标准MD5的堡垒轰然倒塌，引发了密码学界的轩然大波。令世界顶尖密码学家想象不到的是，破解MD5之后，2005年2月，王小云教授又破解了另一国际密码SHA－1。因为SHA－1在美国等国际社会有更加广泛的应用，密码被破的消息一出，在国际社会的反响可谓石破天惊。换句话说，王小云的研究成果表明了从理论上讲电子签名可以伪造，必须及时添加限制条件，或者重新选用更为安全的密码标准，以保证电子商务的安全。</p>
<h2 id="mac-消息认证码">MAC 消息认证码</h2>
<h3 id="基于分组密码的算法描述">基于分组密码的算法描述</h3>
<h3 id="基于序列密码的算法描述">基于序列密码的算法描述</h3>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[应用密码学] 公钥密码]]></title>
        <id>https://holmecat.github.io/post/[应用密码学] 公钥密码/</id>
        <link href="https://holmecat.github.io/post/[应用密码学] 公钥密码/">
        </link>
        <updated>2020-05-11T00:54:11.000Z</updated>
        <summary type="html"><![CDATA[<p>信息安全专业应该是必修的选修，现代密码学<br>
此系列博客是对这门课的要点补记，说穿了就是老师划下的重点<br>
不是笔记因为没记。。。最多加上一些自己的思考。<br>
第六、八章 非对称加密算法 公钥密码<br>
第五和七章是实验所以跳过</p>
]]></summary>
        <content type="html"><![CDATA[<p>信息安全专业应该是必修的选修，现代密码学<br>
此系列博客是对这门课的要点补记，说穿了就是老师划下的重点<br>
不是笔记因为没记。。。最多加上一些自己的思考。<br>
第六、八章 非对称加密算法 公钥密码<br>
第五和七章是实验所以跳过</p>
<!-- more -->
<h2 id="公钥密码">公钥密码</h2>
<h3 id="为了解决的问题">为了解决的问题</h3>
<p>对称加密算法要求密钥均保密，这样每一个通信信道都需要保存一对密钥<br>
一个用户和多个用户有通信信道，他就需要保存很多份密钥，这样既麻烦也不安全</p>
<h3 id="基本思想">基本思想</h3>
<p>公钥密码也称为非对称密码。</p>
<p>使用公钥密码的每一个用户都分别拥有两个密钥：加密密钥与解密密钥，它们两者并不相同，并且由加密密钥得到解密密钥在计算上是不可行的。每一个用户的加密密钥都是公开的。</p>
<p>仅根据密码算法和加密密钥来确定解密密钥在计算上是不可行的。</p>
<p>两个密钥中的任何一个都可用来加密，另一个用来解密。</p>
<h3 id="数学基础">数学基础</h3>
<p>公钥密码的数学基础，基于抽象代数。此处介绍一个概念。</p>
<p><strong>单向陷门函数</strong>可以被定义为如下函数f：</p>
<ol>
<li>给出f的定义域中的任意元素x,f(x)的计算是容易的；</li>
<li>给出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>=</mo><mi>f</mi><mo>(</mo><mi>x</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">y = f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>中的y要计算x时，若知道设计函数f时结合进去的某种信息（该信息称为陷门），则容易计算；若不知道该信息，则难以计算。</li>
</ol>
<p>设计公钥密码体制可以转换为寻找单向陷门函数。</p>
<h3 id="应用">应用</h3>
<ul>
<li>机密性的实现<br>
发送方用接收方的公钥加密消息，接收方用自己的私钥来解密。</li>
<li>数字签名<br>
发送方用自己的私钥来签名消息，接收方通过发送方对应的公钥来鉴别消息，并且发送方不能对自己的签名进行否认。</li>
<li>密钥分发和协商</li>
</ul>
<p>发送方和接收方基于公钥密码系统容易实现在公开信道上的大规模的密钥分发和协商。</p>
<h2 id="rsa-基于整数分解问题欧拉定理费马定理">RSA 基于整数分解问题（欧拉定理，费马定理）</h2>
<p>RSA公钥算法是由 MIT (麻省理工学院, Massachusetts Institute of Technology) 的Rivest, Shamir和Adleman在1978年提出来的。RSA方案是被最广泛接受并实现的通用公开密钥密码算法，目前已成为公钥密码的国际标准。该算法的数学基础是初等数论中的欧拉定理，其安全性建立在大整数因子分解的困难性之上。</p>
<h3 id="r生成密钥">R生成密钥</h3>
<ul>
<li>选择两个不同的大素数p和q，需要保密</li>
<li>计算<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>=</mo><mi>p</mi><mo>×</mo><mi>q</mi></mrow><annotation encoding="application/x-tex">n = p × q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span></span></span></span>，欧拉函数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>φ</mi><mo>(</mo><mi>n</mi><mo>)</mo><mo>=</mo><mo>(</mo><mi>p</mi><mo>−</mo><mn>1</mn><mo>)</mo><mo>×</mo><mo>(</mo><mi>q</mi><mo>−</mo><mn>1</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">φ(n) = (p - 1) × (q - 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">φ</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></li>
<li>选择大于1整数e使得e和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>φ</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">φ(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">φ</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>互素，即gcd = 1，e还要比<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>φ</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">φ(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">φ</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>小</li>
<li>计算d，d是e模<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>φ</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">φ(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">φ</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>的逆元</li>
<li>得到公钥{e，n}，私钥{d，n}</li>
</ul>
<h3 id="r加密">R加密</h3>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mo>=</mo><msup><mi>M</mi><mi>e</mi></msup><mspace></mspace><mspace width="0.4444444444444444em"/><mo>(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>n</mi><mo>)</mo><mo separator="true">,</mo><mi>M</mi><mo>&lt;</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">C = M^e \pmod n, M &lt; n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">e</span></span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span></p>
<h3 id="r解密">R解密</h3>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mo>=</mo><msup><mi>C</mi><mi>d</mi></msup><mspace></mspace><mspace width="0.4444444444444444em"/><mo>(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">M = C^d \pmod n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></p>
<h3 id="安全性分析">安全性分析</h3>
<p>首先，破解RSA不会比分解大整数更加困难<br>
所以，建议如下加强数学安全性质：</p>
<ul>
<li>p和q大小应该差不多</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><mi>p</mi><mo>−</mo><mn>1</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">(p - 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><mi>q</mi><mo>−</mo><mn>1</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">(q - 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>应该包含大的素因子</li>
<li>上面两者的公因数应该很小</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo>&lt;</mo><msup><mi>n</mi><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>4</mn></mrow></msup></mrow><annotation encoding="application/x-tex">d &lt; n^{1/4}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">/</span><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span></span></li>
</ul>
<p>同时还要注意以下三点：</p>
<ul>
<li>用户之间不共享模数n</li>
<li>不同用户选取素数不能相同</li>
<li>一般不直接用RSA加解密</li>
</ul>
<h2 id="elgamal-基于离散对数问题">ElGamal 基于离散对数问题</h2>
<p>ElGamal密码体制是T.ElGamal于1985年提出，是最有名的公钥密码体制之一，它的安全性是基于离散对数问题.</p>
<h3 id="e生成密钥">E生成密钥</h3>
<ul>
<li>选取大素数p和g，g是属于整数集合Zp*且是一个本原元（生成元），p和g作为系统参数共享</li>
<li>每个用户U随机选一个x，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn><mo>≤</mo><mi>x</mi><mo>≤</mo><mi>p</mi><mo>−</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">2 ≤ x ≤ p-2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>，并计算<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>=</mo><msup><mi>g</mi><mi>x</mi></msup><mspace></mspace><mspace width="0.4444444444444444em"/><mo>(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>p</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">y = g^x \pmod p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.858832em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathdefault">p</span><span class="mclose">)</span></span></span></span></li>
<li>y就是用户公钥，x就是用户私钥</li>
</ul>
<h3 id="e加密">E加密</h3>
<ul>
<li>明文M设定在0和p-1之间</li>
<li>用户挑选一个秘密随机数r，同样<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn><mo>≤</mo><mi>r</mi><mo>≤</mo><mi>p</mi><mo>−</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">2 ≤ r ≤ p - 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>，并计算<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mn>1</mn></msub><mo>=</mo><msup><mi>g</mi><mi>r</mi></msup><mspace></mspace><mspace width="0.4444444444444444em"/><mo>(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>p</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">c_1 = g^r \pmod p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.858832em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathdefault">p</span><span class="mclose">)</span></span></span></span></li>
<li>用户再计算<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mn>2</mn></msub><mo>=</mo><mi>m</mi><mo>×</mo><msup><mi>y</mi><mi>r</mi></msup><mspace></mspace><mspace width="0.4444444444444444em"/><mo>(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>p</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">c_2 = m × y^r \pmod p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.858832em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathdefault">p</span><span class="mclose">)</span></span></span></span>，y是目标用户的公钥</li>
<li>加密完成，密文是二元组<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><msub><mi>c</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>c</mi><mn>2</mn></msub><mo>)</mo></mrow><annotation encoding="application/x-tex">(c_1,c_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
</ul>
<h3 id="e解密">E解密</h3>
<p>解密计算仅一步：明文<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mo>=</mo><msub><mi>c</mi><mn>2</mn></msub><mo>×</mo><mo>(</mo><msubsup><mi>c</mi><mn>1</mn><mi>x</mi></msubsup><msup><mo>)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><mspace></mspace><mspace width="0.4444444444444444em"/><mo>(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>p</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">M = c_2 × (c_1^x)^{-1} \pmod p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathdefault">p</span><span class="mclose">)</span></span></span></span>，也就是要算<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><msub><mi>c</mi><mn>1</mn></msub><msup><mo>)</mo><mi>x</mi></msup></mrow><annotation encoding="application/x-tex">(c_1)^x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span></span></span>模p的逆元</p>
<h3 id="算法特点">算法特点</h3>
<ul>
<li>有随机性，每次选随机数r，所以同一明文加密结果也不同</li>
<li>密文空间比明文空间要大，这说明有扩散特质，密文加密之后可以不是任何可能的明文</li>
</ul>
<h2 id="ecc-椭圆曲线">ECC 椭圆曲线</h2>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[应用密码学] 对称加密算法]]></title>
        <id>https://holmecat.github.io/post/[应用密码学] 对称加密算法/</id>
        <link href="https://holmecat.github.io/post/[应用密码学] 对称加密算法/">
        </link>
        <updated>2020-03-16T05:40:34.000Z</updated>
        <summary type="html"><![CDATA[<p>信息安全专业应该是必修的选修，现代密码学<br>
此系列博客是对这门课的要点补记，说穿了就是老师划下的重点<br>
不是笔记因为没记。。。最多加上一些自己的思考。<br>
第四章 对称加密算法 分组密码<br>
前面第三章是实验所以跳过</p>
]]></summary>
        <content type="html"><![CDATA[<p>信息安全专业应该是必修的选修，现代密码学<br>
此系列博客是对这门课的要点补记，说穿了就是老师划下的重点<br>
不是笔记因为没记。。。最多加上一些自己的思考。<br>
第四章 对称加密算法 分组密码<br>
前面第三章是实验所以跳过</p>
<!-- more -->
<h2 id="引言和分组加密工作模式">引言和分组加密工作模式</h2>
<p>简单概念：分组密码就是将明文分成等长的每一组，然后分别处理加解密</p>
<h3 id="分组密码设计原则">分组密码设计原则</h3>
<p>针对安全性的一般设计原则：</p>
<ul>
<li>明文分组长度和密钥长度望尽可能大</li>
<li>混乱原则：又称混淆原则，是指密钥和明文以及密文之间的依赖关系尽可能的复杂</li>
<li>扩散原则：密钥或明文的每一位影响密文的许多位以便隐蔽明文的统计特性</li>
</ul>
<h4 id="两种经典算法结构">两种经典算法结构</h4>
<ul>
<li>Feistel结构<br>
Feistel结构是典型的迭代密码.Feistel结构的解密与加密是完全一样的，除了所使用的子密钥的顺序正好相反。</li>
</ul>
<figure data-type="image" tabindex="1"><img src="https://holmecat.github.io//post-images/1587883578008.png" alt="Feistel结构" loading="lazy"></figure>
<ul>
<li>SPN结构<br>
SPN结构也是一种特殊的迭代密码 。SPN结构和Feistel结构相比，可以得到更快速的扩散，但是SPN密码的加解密通常不相似。</li>
</ul>
<figure data-type="image" tabindex="2"><img src="https://holmecat.github.io//post-images/1587883590118.png" alt="SPN结构" loading="lazy"></figure>
<h3 id="分组加密工作模式">分组加密工作模式</h3>
<p>不同的工作模式，可以在形式上对加密效果产生影响，具有不同的适用场合</p>
<h4 id="电子密码本模式ecb">电子密码本模式（ECB）</h4>
<p>即直接流加密，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo>=</mo><mi>E</mi><mi>k</mi><mo>(</mo><mi>M</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo>)</mo></mrow><annotation encoding="application/x-tex">C[i] = Ek(M[i])</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mclose">)</span></span></span></span><br>
相同密钥作用下，在相同的明文加密后将产生相同的密文 ，易于暴露明文的固有格式<br>
各密文块间缺乏相关性，信息易于受到块替换攻击</p>
<h4 id="密码分组链接模式cbc">密码分组链接模式（CBC）</h4>
<figure data-type="image" tabindex="3"><img src="https://holmecat.github.io//post-images/1588842531035.png" alt="CBC" loading="lazy"></figure>
<p>AES实现将会涉及到这个</p>
<h4 id="密码反馈模式cfb">密码反馈模式（CFB）</h4>
<figure data-type="image" tabindex="4"><img src="https://holmecat.github.io//post-images/1588842534769.png" alt="CFB" loading="lazy"></figure>
<h4 id="输出反馈模式ofb">输出反馈模式（OFB）</h4>
<figure data-type="image" tabindex="5"><img src="https://holmecat.github.io//post-images/1588842537490.png" alt="OFB" loading="lazy"></figure>
<h4 id="计数器模式ctr">计数器模式（CTR）</h4>
<figure data-type="image" tabindex="6"><img src="https://holmecat.github.io//post-images/1588842541243.png" alt="CTR" loading="lazy"></figure>
<h2 id="des">DES</h2>
<p>SDES这里跳过，直接上完整基础的DES加解密算法。<br>
DES是一种明文分组为64比特，有效密钥56比特，输出密文64比特的，具有16轮迭代的分组对称密码算法，DES由初始置换，16轮迭代，初始逆置换组成。<br>
细节主要就是按下标的置换，异或，S盒置换，前两者比较简单。S盒置换不懂的可以搜一下。<br>
Github上Github上有输入64位明文的算法实现，但是无分组工作模式。<br>
以下描述DES算法具体内容<br>
<img src="https://holmecat.github.io//post-images/1587883751377.png" alt="DES" loading="lazy"></p>
<h3 id="算法描述结合上图阅读">算法描述，结合上图阅读</h3>
<h4 id="初始输入">初始输入</h4>
<p>64位原文，64位密钥</p>
<h4 id="子密钥准备">子密钥准备</h4>
<p>核心算法的每一轮迭代，都需要一个子密钥<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>K</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">K_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br>
生成方式：将64位密钥进行<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><msub><mi>P</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">EP_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>置换，缩短为56位结果</p>
<h5 id="开始16轮密钥生成迭代">开始16轮密钥生成迭代</h5>
<p>将56位结果，左28位作为高位，右28位作为低位<br>
根据LOOP数组对应的值，高低位循环左移数位<br>
然后将目前的56位结果进行<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><msub><mi>P</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">EP_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>置换，生成为48位结果<br>
这个结果就是子密钥<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>K</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">K_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p>
<p>经过上述操作的16轮迭代后，得到16个子密钥</p>
<h4 id="核心算法">核心算法</h4>
<p>将64位原文作IP置换，得到64位结果</p>
<h5 id="开始16轮迭代">开始16轮迭代</h5>
<p>将64位结果，左32位作为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">L_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>组，右32位作为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>R</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">R_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>组，i + 1为实际迭代轮数，所以i为0-15代表1-16轮</p>
<ul>
<li>f函数 输入为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>R</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">R_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>组<br>
将R组进行IP置换，扩展为48位<br>
将R组和子密钥<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>K</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">K_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>作异或<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊕</mo></mrow><annotation encoding="application/x-tex">\oplus</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">⊕</span></span></span></span>运算<br>
将48位异或结果，进入8个S盒，处理为32位<br>
将32位S盒结果作P置换，引起雪崩效应，起混淆作用<br>
结果记为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><msub><mi>R</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>K</mi><mi>i</mi></msub><mo>)</mo></mrow><annotation encoding="application/x-tex">f(R_i,K_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
<li>异或交换<br>
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>i</mi><mo>+</mo><mn>1</mn><mo>=</mo><mi>R</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">Li + 1 = Ri</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">i</span></span></span></span><br>
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>i</mi><mo>+</mo><mn>1</mn><mo>=</mo><mi>L</mi><mi>i</mi><mo>⊕</mo><mi>f</mi><mo>(</mo><mi>R</mi><mi>i</mi><mo separator="true">,</mo><mi>K</mi><mi>i</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">Ri + 1 = Li \oplus f(Ri,Ki)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mord mathdefault">i</span><span class="mclose">)</span></span></span></span>，实际实现中处理了L和R的覆盖问题<br>
可见上述就是将没动的左半边和f函数结果进行了异或，然后左右交换</li>
</ul>
<p>经过上述操作的16轮迭代后，得到最后64位结果<br>
将64位结果的左<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mn>16</mn></msub></mrow><annotation encoding="application/x-tex">L_{16}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>右<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>R</mi><mn>16</mn></msub></mrow><annotation encoding="application/x-tex">R_{16}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>再次交换，其实就是抵消掉最后一轮的左右交换，实际实现中第16轮不交换<br>
将交换恢复结果作IP逆置换，得到64位结果</p>
<h4 id="最终输出">最终输出</h4>
<p>64位结果</p>
<h3 id="des加解密的区别">DES加解密的区别</h3>
<p>DES的加解密很有意思，密钥生成和处理算法上是相同的</p>
<p>不同点仅在于，16个子密钥的使用顺序是完全相反的，加密从密钥1-16使用，解密时从密钥16-1使用</p>
<p>即每一轮使用的密钥不一样</p>
<h3 id="改进方案三重des">改进方案：三重DES</h3>
<p>套娃技术，素质三连算法迭代</p>
<ul>
<li>加密顺序：加密——解密——加密</li>
<li>解密顺序：解密——加密——解密</li>
</ul>
<h2 id="aes">AES</h2>
<p>高级加密标准：AES 是DES的替代者。</p>
<p>1997年9月12日，NIST发布了征集算法的正式公告，要求AES具有128比特的分组长度，并支持128、192和256比特的密钥长度，而且要求AES要能在全世界范围内免费使用。</p>
<p>2000年10月2日，Rijndael算法被选择为高级加密标准。<br>
Github上AES提供一个基础的AES加解密，还有基于CBC工作模式对于文件的加解密。</p>
<p>采取标准的，密钥长度128，10轮，扩展密钥长度176的最小组。</p>
<p>下面将先描述其数学基础，再进行大致的算法描述</p>
<h3 id="数学基础">数学基础</h3>
<p>AES中的运算是按字节的，并把一个字节看成是系数在有限域GF(2)上的次数小于8的多项式（即把一个字节看成是有限域GF(2^8)中的一个元素) 。</p>
<p>多项式形式：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>b</mi><mn>7</mn></msub><msup><mi>x</mi><mn>7</mn></msup><mo>+</mo><msub><mi>b</mi><mn>6</mn></msub><msup><mi>x</mi><mn>6</mn></msup><mo>+</mo><msub><mi>b</mi><mn>5</mn></msub><msup><mi>x</mi><mn>5</mn></msup><mo>+</mo><msub><mi>b</mi><mn>4</mn></msub><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msub><mi>b</mi><mn>3</mn></msub><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><msub><mi>b</mi><mn>2</mn></msub><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msub><mi>b</mi><mn>1</mn></msub><mi>x</mi><mo>+</mo><msub><mi>b</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">b_7x^7 + b_6x^6 + b_5x^5 + b_4x^4 + b_3x^3 + b_2x^2 + b_1x + b_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.964108em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.964108em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.964108em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.964108em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.964108em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.964108em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，这些<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>b</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">b_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>都是系数0或1</p>
<p>打个比方说57:(01010111)可写成：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mn>6</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x^6 + x^4 + x^2 + x + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p>
<p>因此，这涉及到抽象代数，在有限域上的运算</p>
<h4 id="gf2加法">GF(2)加法</h4>
<p>在多项式表示中，两个元素的和是一个多项式，其系数是两个元素的对应系数的模2加(即异或)。</p>
<p>例如：“57”和“83”的和为：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>57</mn><mo>⊕</mo><mn>83</mn><mo>=</mo><mi>D</mi><mn>4</mn></mrow><annotation encoding="application/x-tex">57 \oplus 83 = D4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">5</span><span class="mord">7</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord">4</span></span></span></span></p>
<p>对应多项式记法：<br>
57 → 01010111 → <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mn>6</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x^6 + x^4 + x^2 + x + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span><br>
83 → 10000011 → <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mn>7</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x^7 + x + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><msup><mi>x</mi><mn>6</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo>)</mo><mo>+</mo><mo>(</mo><msup><mi>x</mi><mn>7</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo>)</mo><mo>=</mo><msup><mi>x</mi><mn>7</mn></msup><mo>+</mo><msup><mi>x</mi><mn>6</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">(x^6 + x^4 + x^2 + x + 1) + (x^7 + x + 1) = x^7 + x^6 + x^4 + x^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span> → 11010100 → D4 此处模2加法，遇到相同的就抵消</p>
<h4 id="gf2乘法">GF(2)乘法</h4>
<p>不作证明，仅作描述</p>
<p>首先，有限域GF(2)上关键不可约分多项式：<br>
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>(</mo><mi>x</mi><mo>)</mo><mo>=</mo><msup><mi>x</mi><mn>8</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">m(x) = x^8 + x^4 + x^3 + x + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p>
<p>为啥关键呢，因为乘法运算最后要模它。十六进制是11B</p>
<p>例如：‘57’·‘83’ = ‘C1’可表示为以下的多项式乘法：<br>
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><msup><mi>x</mi><mn>6</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo>)</mo><mo separator="true">⋅</mo><mo>(</mo><msup><mi>x</mi><mn>7</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo>)</mo><mo>=</mo><msup><mi>x</mi><mn>7</mn></msup><mo>+</mo><msup><mi>x</mi><mn>6</mn></msup><mo>+</mo><mn>1</mn><mspace></mspace><mspace width="0.4444444444444444em"/><mo>(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>m</mi><mo>(</mo><mi>x</mi><mo>)</mo><mo>)</mo></mrow><annotation encoding="application/x-tex">(x^6 + x^4 + x^2 + x + 1) · (x^7 + x + 1) = x^7 + x^6 + 1\pmod {m(x)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathdefault">m</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></p>
<h5 id="性质">性质</h5>
<p>GF(2)的这种乘法满足交换律、分配律，且有单位元‘01’</p>
<p>满足类似贝祖等式：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mo>(</mo><mi>x</mi><mo>)</mo><mi>a</mi><mo>(</mo><mi>x</mi><mo>)</mo><mo>+</mo><mi>m</mi><mo>(</mo><mi>x</mi><mo>)</mo><mi>c</mi><mo>(</mo><mi>x</mi><mo>)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">b(x)a(x) + m(x)c(x) = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mord mathdefault">a</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mord mathdefault">c</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span><br>
即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>(</mo><mi>x</mi><mo>)</mo><mo separator="true">⋅</mo><mi>b</mi><mo>(</mo><mi>x</mi><mo>)</mo><mo>=</mo><mn>1</mn><mspace></mspace><mspace width="0.4444444444444444em"/><mo>(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>m</mi><mo>(</mo><mi>x</mi><mo>)</mo><mo>)</mo></mrow><annotation encoding="application/x-tex">a(x) · b(x) = 1 \pmod {m(x)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathdefault">m</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>(</mo><mi>x</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">a(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mo>(</mo><mi>x</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">b(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>的乘法逆元</p>
<h4 id="x乘法">x乘法</h4>
<p>这是对上面的补充，用适合计算机的方式来表达和运算。</p>
<p>记作<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo separator="true">⋅</mo><mi>B</mi><mo>(</mo><mi>x</mi><mo>)</mo><mo>=</mo><mo>(</mo><msub><mi>b</mi><mn>6</mn></msub><msub><mi>b</mi><mn>5</mn></msub><msub><mi>b</mi><mn>4</mn></msub><msub><mi>b</mi><mn>3</mn></msub><msub><mi>b</mi><mn>2</mn></msub><msub><mi>b</mi><mn>1</mn></msub><msub><mi>b</mi><mn>0</mn></msub><mn>0</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">x · B(x) = (b_6 b_5 b_4 b_3 b_2 b_1 b_0 0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">x</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">0</span><span class="mclose">)</span></span></span></span><br>
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>b</mi><mn>7</mn></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">b_7 = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 当结果最高位是0，保留剩下7位贴0</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><msub><mi>b</mi><mn>6</mn></msub><msub><mi>b</mi><mn>5</mn></msub><msub><mi>b</mi><mn>4</mn></msub><msub><mi>b</mi><mn>3</mn></msub><msub><mi>b</mi><mn>2</mn></msub><msub><mi>b</mi><mn>1</mn></msub><msub><mi>b</mi><mn>0</mn></msub><mn>0</mn><mo>)</mo><mo>⊕</mo><mo>(</mo><mn>00011011</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">(b_6 b_5 b_4 b_3 b_2 b_1 b_0 0) \oplus(00011011)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">0</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mclose">)</span></span></span></span><br>
b7 = 1 当结果最高位是1，还要再异或一个数</p>
<p>所以，简单来说，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>(</mo><mi>x</mi><mo>)</mo><mo separator="true">⋅</mo><mi>b</mi><mo>(</mo><mi>x</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">a(x) · b(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>就可以像小学生那样，将a拆成一个个x的幂，分别去乘b(x)</p>
<p>最后再全部异或起来</p>
<figure data-type="image" tabindex="7"><img src="https://holmecat.github.io//post-images/1588850464248.png" alt="x乘法" loading="lazy"></figure>
<h4 id="字">字</h4>
<p>AES除了字节，还有字也是数据处理单位。一个字 = 4个字节<br>
同时字是在有限域<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>F</mi><mo>(</mo><msup><mn>2</mn><mn>8</mn></msup><mo>)</mo></mrow><annotation encoding="application/x-tex">GF(2^8)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>上，注意一下有8次方，是更大的一个域<br>
所以字的表示方法是，系数取自<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>F</mi><mo>(</mo><msup><mn>2</mn><mn>8</mn></msup><mo>)</mo></mrow><annotation encoding="application/x-tex">GF(2^8)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>上的次数低于4次的多项式<br>
例：字 57 83 4A D1$ = 57x^3 + 83x^2 + 4Ax + D1<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">字</mi><mi mathvariant="normal">也</mi><mi mathvariant="normal">有</mi><mi mathvariant="normal">加</mi><mi mathvariant="normal">法</mi><mi mathvariant="normal">和</mi><mi mathvariant="normal">乘</mi><mi mathvariant="normal">法</mi><mi mathvariant="normal">，</mi><mi mathvariant="normal">加</mi><mi mathvariant="normal">法</mi><mi mathvariant="normal">也</mi><mi mathvariant="normal">是</mi><mi mathvariant="normal">对</mi><mi mathvariant="normal">应</mi><mi mathvariant="normal">系</mi><mi mathvariant="normal">数</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">模</mi><mn>2</mn><mi mathvariant="normal">加</mi><mi mathvariant="normal">乘</mi><mi mathvariant="normal">法</mi><mi mathvariant="normal">有</mi><mi mathvariant="normal">点</mi><mi mathvariant="normal">差</mi><mi mathvariant="normal">异</mi><mi mathvariant="normal">：</mi></mrow><annotation encoding="application/x-tex">
字也有加法和乘法，加法也是对应系数的模2加
乘法有点差异：</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord cjk_fallback">字</span><span class="mord cjk_fallback">也</span><span class="mord cjk_fallback">有</span><span class="mord cjk_fallback">加</span><span class="mord cjk_fallback">法</span><span class="mord cjk_fallback">和</span><span class="mord cjk_fallback">乘</span><span class="mord cjk_fallback">法</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">加</span><span class="mord cjk_fallback">法</span><span class="mord cjk_fallback">也</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">对</span><span class="mord cjk_fallback">应</span><span class="mord cjk_fallback">系</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">模</span><span class="mord">2</span><span class="mord cjk_fallback">加</span><span class="mord cjk_fallback">乘</span><span class="mord cjk_fallback">法</span><span class="mord cjk_fallback">有</span><span class="mord cjk_fallback">点</span><span class="mord cjk_fallback">差</span><span class="mord cjk_fallback">异</span><span class="mord cjk_fallback">：</span></span></span></span>b(x) = a(x)c(x) \pmod {x^4 + 1}<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">，</mi><mi mathvariant="normal">例</mi><mi mathvariant="normal">子</mi><mi mathvariant="normal">：</mi></mrow><annotation encoding="application/x-tex">，例子：
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">例</span><span class="mord cjk_fallback">子</span><span class="mord cjk_fallback">：</span></span></span></span>a(x) = a_3x^3 + a_2x^2 + a_1x + a_0<span class="katex"><span class="katex-mathml"><math><semantics><mrow></mrow><annotation encoding="application/x-tex">
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span>b(x) = b_3x^3 + b_2x^2 + b_1x + b_0<span class="katex"><span class="katex-mathml"><math><semantics><mrow></mrow><annotation encoding="application/x-tex">
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span>c(x) = c_3x^3 + c_2x^2 + c_1x + c_0<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">所</mi><mi mathvariant="normal">以</mi><mi mathvariant="normal">，</mi></mrow><annotation encoding="application/x-tex">
所以，</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord cjk_fallback">所</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">，</span></span></span></span>c(x) = a(x)b(x) \pmod {x^4 + 1}<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">，</mi><mi mathvariant="normal">则</mi><mi mathvariant="normal">以</mi><mi mathvariant="normal">下</mi><mi mathvariant="normal">公</mi><mi mathvariant="normal">式</mi><mi mathvariant="normal">可</mi><mi mathvariant="normal">以</mi><mi mathvariant="normal">直</mi><mi mathvariant="normal">接</mi><mi mathvariant="normal">套</mi><mi mathvariant="normal">用</mi><mi mathvariant="normal">，</mi><mi mathvariant="normal">并</mi><mi mathvariant="normal">且</mi><mi mathvariant="normal">显</mi><mi mathvariant="normal">然</mi><mi mathvariant="normal">是</mi><mi mathvariant="normal">矩</mi><mi mathvariant="normal">阵</mi><mi mathvariant="normal">乘</mi><mi mathvariant="normal">法</mi></mrow><annotation encoding="application/x-tex">，则以下公式可以直接套用，并且显然是矩阵乘法
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">则</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">下</span><span class="mord cjk_fallback">公</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">直</span><span class="mord cjk_fallback">接</span><span class="mord cjk_fallback">套</span><span class="mord cjk_fallback">用</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">并</span><span class="mord cjk_fallback">且</span><span class="mord cjk_fallback">显</span><span class="mord cjk_fallback">然</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">矩</span><span class="mord cjk_fallback">阵</span><span class="mord cjk_fallback">乘</span><span class="mord cjk_fallback">法</span></span></span></span>c_0 = a_0 b_0 + a_3 b_1 + a_2 b_2 + a_1 b_3<span class="katex"><span class="katex-mathml"><math><semantics><mrow></mrow><annotation encoding="application/x-tex">
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span>c1 = a_1 b_0 + a_0 b_1 + a_3 b_2 + a_2 b_3<span class="katex"><span class="katex-mathml"><math><semantics><mrow></mrow><annotation encoding="application/x-tex">
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span>c2 = a_2 b_0 + a_1 b_1 + a_0 b_2 + a_3 b_3<span class="katex"><span class="katex-mathml"><math><semantics><mrow></mrow><annotation encoding="application/x-tex">
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span>c3 = a_3 b_0 + a_2 b_1 + a_1 b_2 + a_0 b_3$</p>
<h3 id="aes算法描述">AES算法描述</h3>
<figure data-type="image" tabindex="8"><img src="https://holmecat.github.io//post-images/1588909313660.png" alt="AES" loading="lazy"></figure>
<h4 id="输入">输入</h4>
<p>明文M，密钥Key</p>
<h4 id="keyexpansion密钥扩展">KeyExpansion密钥扩展</h4>
<p>像DES准备密钥一样，AES也需要扩展。</p>
<p>将输入的密钥Key扩展为11组128位密钥组，第0组是本身</p>
<p>后面10组中，第n组第i列为第n-1组第i列与第n组第i-1列之和</p>
<p>对于每一组 第0列 即 i=0，有特殊的处理</p>
<p>将前一列即第n-1组第3列（i=3）的4个字节循环左移1个字节，并对每个字节进行字节替代变换SubBytes将第一行（即第一个字节）与轮常量rc[n]相加，最后再与前一组该列相加</p>
<h4 id="state准备">State准备</h4>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>t</mi><mi>a</mi><mi>t</mi><mi>e</mi><mo>=</mo><mi>M</mi><mo>⊕</mo><mi mathvariant="normal">轮</mi><mi mathvariant="normal">密</mi><mi mathvariant="normal">钥</mi><mi mathvariant="normal">（</mi><mi mathvariant="normal">即</mi><mi mathvariant="normal">先</mi><mi mathvariant="normal">执</mi><mi mathvariant="normal">行</mi><mi mathvariant="normal">一</mi><mi mathvariant="normal">次</mi><mi>A</mi><mi>d</mi><mi>d</mi><mi>R</mi><mi>o</mi><mi>u</mi><mi>n</mi><mi>d</mi><mi>K</mi><mi>e</mi><mi>y</mi><mi mathvariant="normal">轮</mi><mi mathvariant="normal">密</mi><mi mathvariant="normal">钥</mi><mi mathvariant="normal">加</mi><mi mathvariant="normal">）</mi></mrow><annotation encoding="application/x-tex">State = M \oplus 轮密钥（即先执行一次AddRoundKey轮密钥加）</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">轮</span><span class="mord cjk_fallback">密</span><span class="mord cjk_fallback">钥</span><span class="mord cjk_fallback">（</span><span class="mord cjk_fallback">即</span><span class="mord cjk_fallback">先</span><span class="mord cjk_fallback">执</span><span class="mord cjk_fallback">行</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">次</span><span class="mord mathdefault">A</span><span class="mord mathdefault">d</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">o</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord cjk_fallback">轮</span><span class="mord cjk_fallback">密</span><span class="mord cjk_fallback">钥</span><span class="mord cjk_fallback">加</span><span class="mord cjk_fallback">）</span></span></span></span></p>
<h4 id="n轮迭代">N轮迭代</h4>
<p>前r - 1轮：这里比DES复杂许多，后面会单独一个个说明</p>
<ul>
<li>SubBytes S盒替换</li>
<li>ShiftRows 行移位</li>
<li>MixColumns 列混淆</li>
<li>AddRoundKey 轮密钥加</li>
</ul>
<p>最后第r轮，不做列混淆，做其他三个即可。</p>
<h4 id="输出">输出</h4>
<p>此时的State就是密文C</p>
<h4 id="subbytes-s盒替换">SubBytes S盒替换</h4>
<p>由两个可逆变换复合而成</p>
<ul>
<li>求输入字节A的乘法逆元T</li>
<li>作仿射变换，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi><mo>=</mo><mi>M</mi><mo separator="true">⋅</mo><mi>T</mi><mo>⊕</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">Y = M · T \oplus B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span></li>
</ul>
<p>在实际编码当中依照如上数学公式，生成S盒，这样每次输入的作为行号和列号，直接就能获取结果</p>
<p>Github上的代码，没有生成部分，直接设置了已经生成的S盒和逆S盒</p>
<h4 id="shiftrows-行移位">ShiftRows 行移位</h4>
<p>将目标排成矩阵，然后每一行以字节为单位向左位移一定的量即可<br>
第0-3行分别循环左移0-3字节</p>
<h4 id="mixcolumns-列混淆">MixColumns 列混淆</h4>
<p>对一个状态逐列进行变换，它将一个状态的每一列视为有限域GF(2^8)上的一个多项式。</p>
<p>在变换中，每一列所表示的多项式将乘以一个固定的多项式<br>
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mo>(</mo><mi>x</mi><mo>)</mo><mo>=</mo><mn>3</mn><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">C(x) = 3 x^3 + x^2 + x + 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span></p>
<p>对应4字节向量为(03 01 01 02)，模多项式为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><mn>1</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">(x^4 + 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></p>
<h4 id="addroundkey-轮密钥加">AddRoundKey 轮密钥加</h4>
<p>把对应轮的密钥和目标进行模2加运算，即异或。</p>
<h4 id="aes加解密的区别">AES加解密的区别</h4>
<p>和DES不同，AES像是DES和倒推的组合</p>
<p>本质上AES解密是整个过程的反向，只是轮密钥加这个动作是再执行一次<br>
密钥使用顺序也是倒着的</p>
<p>如果根据步骤规律重新定义为每一轮的话，那么先执行一次AddRoundKey<br>
前r - 1轮：</p>
<ul>
<li>InverseShiftRows 逆向行移位</li>
<li>InverseSubBytes 逆向S盒替换</li>
<li>AddRoundKey 轮密钥加</li>
<li>InverseMixColumns 逆向列混淆</li>
</ul>
<p>最后第r轮，不做逆向列混淆，做其他三个即可。<br>
实际实现代码当中，除了逆向行移位以外，其他两个Inverse是依靠传矩阵参数来做的。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[应用密码学] 传统密码技术]]></title>
        <id>https://holmecat.github.io/post/[应用密码学] 传统密码技术/</id>
        <link href="https://holmecat.github.io/post/[应用密码学] 传统密码技术/">
        </link>
        <updated>2020-03-02T06:50:41.000Z</updated>
        <summary type="html"><![CDATA[<p>信息安全专业应该是必修的选修，现代密码学<br>
此系列博客是对这门课的要点补记，说穿了就是老师划下的重点<br>
不是笔记因为没记。。。最多加上一些自己的思考。<br>
第二章，传统密码技术，讲最原始的密码术</p>
]]></summary>
        <content type="html"><![CDATA[<p>信息安全专业应该是必修的选修，现代密码学<br>
此系列博客是对这门课的要点补记，说穿了就是老师划下的重点<br>
不是笔记因为没记。。。最多加上一些自己的思考。<br>
第二章，传统密码技术，讲最原始的密码术</p>
<!-- more -->
<h2 id="替代密码substitution">替代密码(Substitution)</h2>
<h3 id="单表替代密码用一个替代表决定代换规则">单表替代密码：用一个替代表决定代换规则</h3>
<ul>
<li>单字母替代：一个字母换一个字母。如Caesar密码</li>
<li>多字母替代：不仅换，还要看上下文位置。如Hill密码，Playfair密码</li>
</ul>
<p>单表替代也就是有一个1对1的映射关系。<br>
特点：密钥空间K很大，穷举比较难。密钥也不容易记忆。</p>
<h4 id="移位密码凯撒密码">移位密码/凯撒密码</h4>
<p>这就是防止记忆难得一种，也就是说映射关系变得有规律。<br>
就是把密文和明文的关系，定义为向前或者向后移K个。<br>
著名的凯撒密码是移动3个，开头明文abc对应了密文xyz，从d开始对应a。</p>
<h4 id="仿射密码">仿射密码</h4>
<p>一种比较特殊的映射关系，具体如下：</p>
<p>有两个整数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>k</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">k_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>k</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">k_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，都是属于0-25的<br>
其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>k</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">k_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>还得和26互素，即两者最大公因数为1，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi><mi>c</mi><mi>d</mi><mo>(</mo><msub><mi>k</mi><mn>1</mn></msub><mo separator="true">,</mo><mn>26</mn><mo>)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">gcd(k_1,26) = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">c</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord">6</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span><br>
然后，加密变换就是 密文<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>=</mo><mi>E</mi><mi>k</mi><mo>(</mo><mi mathvariant="normal">明</mi><mi mathvariant="normal">文</mi><mi>m</mi><mo>)</mo><mo>=</mo><msub><mi>k</mi><mn>1</mn></msub><mo>×</mo><mi>m</mi><mo>+</mo><msub><mi>k</mi><mn>2</mn></msub><mspace></mspace><mspace width="0.4444444444444444em"/><mo>(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mn>26</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">c = Ek(明文m) = k_1 × m + k_2 \pmod {26}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mopen">(</span><span class="mord cjk_fallback">明</span><span class="mord cjk_fallback">文</span><span class="mord mathdefault">m</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord">2</span><span class="mord">6</span><span class="mclose">)</span></span></span></span><br>
同理，解密变换就是 明文<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>=</mo><mi>D</mi><mi>k</mi><mo>(</mo><mi mathvariant="normal">密</mi><mi mathvariant="normal">文</mi><mi>c</mi><mo>)</mo><mo>=</mo><msubsup><mi>k</mi><mn>1</mn><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><mo>×</mo><mo>(</mo><mi>c</mi><mo>−</mo><msub><mi>k</mi><mn>2</mn></msub><mo>)</mo><mspace></mspace><mspace width="0.4444444444444444em"/><mo>(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mn>26</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">m = Dk(密文c) = k^{-1}_1 × (c - k_2) \pmod {26}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mopen">(</span><span class="mord cjk_fallback">密</span><span class="mord cjk_fallback">文</span><span class="mord mathdefault">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.120547em;vertical-align:-0.266308em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.854239em;"><span style="top:-2.433692em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.1031310000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.266308em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord">2</span><span class="mord">6</span><span class="mclose">)</span></span></span></span><br>
逆元，还记得扩展欧几里得除法吗，就可以求出来。数字小的枚举一下也行。</p>
<p>密钥空间大小为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>12</mn><mo>×</mo><mn>26</mn><mo>=</mo><mn>312</mn></mrow><annotation encoding="application/x-tex">12 × 26 = 312</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">1</span><span class="mord">2</span></span></span></span></p>
<h4 id="密钥短语密码">密钥短语密码</h4>
<p>其实就是变形的移位，明文从a开始对应一个单词，比如a对应k，b对e，c对y</p>
<p>那么开头就是abc对应单词key，剩下的d开始对应a，中间跳过已经对应的key就行了。</p>
<h3 id="多表替代用多个替代表决定">多表替代：用多个替代表决定</h3>
<ul>
<li>周期：规律看似没有，但其实有周期性规律的。如维吉尼亚密码，转子机密码。</li>
<li>非周期：一次一密(One time padding)，是个不可破解的密码。</li>
</ul>
<h4 id="维吉尼亚密码">维吉尼亚密码</h4>
<p>特点：密钥动态周期变化</p>
<p>简单来说，首先有个密钥，比如它是cipher，那么长度就是6，每个字母可以转换为数字0-25</p>
<p>然后面对明文，开始一个个加密。将c的数字和明文第一个字母的数字加起来，然后<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mspace></mspace><mspace width="0.4444444444444444em"/><mo>(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mn>26</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">\pmod {26}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord">2</span><span class="mord">6</span><span class="mclose">)</span></span></span></span></p>
<p>最后再换回数字，就可以了，本质就是一个叠加映射。</p>
<p>密钥用到最后r了之后，就从头c接着再来用。循环使用。</p>
<p>解密就是做个减法，倒着推回去就行了</p>
<h2 id="置换密码">置换密码</h2>
<p>本身内容不变，就是换了个位置。至于怎么换位置的，就是难点所在。</p>
<h3 id="栅栏技术">栅栏技术</h3>
<p>将明文一列一列写成一个矩阵，再一行一行读出来就是密文。</p>
<p>比如abcd，可以写成第一列ab，第二列cd，这样第一行是ac，第二行是bd，然后读出来就是acbd了</p>
<h3 id="列置换密码">列置换密码</h3>
<p>栅栏升级版！这次是先一行行的写成一个矩阵，然后按列读的。</p>
<p>不仅如此，有个密钥就是列的顺序，直接一列一列读那和栅栏（咸鱼）有什么区别</p>
<p>加解密的密钥置换是不一样的，这里举个例子：比如，有6列，那么</p>
<ul>
<li>加密置换：<br>
1 2 3 4 5 6<br>
3 5 1 6 4 2</li>
<li>解密置换<br>
1 2 3 4 5 6<br>
3 6 1 5 4 2</li>
</ul>
<h2 id="古典密码的统计分析">古典密码的统计分析</h2>
<p>统计比穷举快得多，虽说不是精确的有误差，但是对于古典密码们来说，还算有效</p>
<p>本质就是根据语言特性，统计字母出现频率，比如e在英文当中出现的频率是最高的</p>
<p>那么如果你发现密文当中z的频率很高，那么z八九不离十就是e的变换<br>
这样，找几个统计特征明显的字母，或许就能确定变换了</p>
<h2 id="转轮机密码">转轮机密码</h2>
<ul>
<li>加密方式：恩尼格玛机，很像第五人格的密码机哈哈哈</li>
<li>解密方式：图灵破解了这玩意儿，制造了“图灵炸弹”。。。。。。</li>
</ul>
<p>具体的自行搜一下吧，了解一下就可以了。</p>
<h2 id="小的总结">小的总结</h2>
<p>其实到这里为止，之前学概念，学这种古代的密码术（都称不上是科学），就是引入了一个大概。看着相对比较简单，因为密码这个东西，加密和解密的难度显然不是一个量级的。。。</p>
<p>加密这么简单的，破解起来其实不是很容易，很多要靠猜测，要暴力</p>
<p>接下来开始，就是要研究真正的现代密码学了，要运用数论知识写密码算法了。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[应用密码学] 密码学概述]]></title>
        <id>https://holmecat.github.io/post/[应用密码学] 密码学概述/</id>
        <link href="https://holmecat.github.io/post/[应用密码学] 密码学概述/">
        </link>
        <updated>2020-02-25T07:55:19.000Z</updated>
        <summary type="html"><![CDATA[<p>信息安全专业应该是必修的选修，现代密码学<br>
此系列博客是对这门课的要点补记，说穿了就是老师划下的重点<br>
不是笔记因为没记。。。最多加上一些自己的思考。<br>
第一章，一个绪论，增进常识。</p>
]]></summary>
        <content type="html"><![CDATA[<p>信息安全专业应该是必修的选修，现代密码学<br>
此系列博客是对这门课的要点补记，说穿了就是老师划下的重点<br>
不是笔记因为没记。。。最多加上一些自己的思考。<br>
第一章，一个绪论，增进常识。</p>
<!-- more -->
<h2 id="第一章密码学概述">第一章：密码学概述</h2>
<ul>
<li>密码学是信息安全基础，提供了3个安全服务：真实性（可鉴别性），机密性，完整性保护和信息抗抵赖性</li>
<li>CIA：confidentiality，integrity，authentication，也就是上面的概念</li>
<li>密码学保障不了可用性</li>
<li>德国二战用的密码机：恩尼格玛密码机</li>
<li>图灵破解了恩尼格玛密码机，也是人工智能之父</li>
<li>中华人民共和国密码法，2020-1-1起实施</li>
<li>1977第一个商用密码 DES</li>
<li>香农：奠基性论文“保密系统的通信理论”（Communication Theory of Secrecy System）</li>
<li>公开密码开创者：惠特菲尔德·迪菲（Whitfield Diffie）与马丁·赫尔曼（Martin Hellman）</li>
<li>AES：Rijndael数据加密算法，是由Daemen和Rijmen</li>
<li>中国的自主密码：SM；对应国际上密码：sm2，sm3，sm4</li>
<li>密码学研究领域的两个分支：密码分析学和密码编码学</li>
<li>明文，密码，加密算法，密钥英文代表符：M，C，E，K</li>
<li>密码分析者破译胡或攻击密码的方法主要有穷举攻击法，统计分析法和数学分析攻击法</li>
<li>衡量密码系统攻击的复杂性主要考虑三个方面的因素：数据复杂性，处理复杂性，存储需求</li>
<li>柯克霍夫斯原则：密码系统中的算法即使为密码分析者所知，也无助于用来推导出铭文或密钥。也就是说，密码系统的安全性不应取决于不易被改变的事物（算法），而应只取决于可随时改变的密钥。</li>
<li>对于商用密码系统而言，公开密码算法的优点包括：
<ul>
<li>有利于对密码算法的安全性进行公开测试评估；</li>
<li>防止密码算法设计者在算法中隐藏后门</li>
<li>易于实现密码算法的标准化</li>
<li>有利于使用密码算法产品的规模化生产，实现低成本和高性能。</li>
</ul>
</li>
</ul>
<h2 id="课后作业">课后作业</h2>
<h3 id="1-什么是密码学什么是密码编码学什么是密码分析学">1、什么是密码学？什么是密码编码学？什么是密码分析学？</h3>
<p>密码学是信息安全学科建设和信息系统安全工程实践的基础理论之一。密码学贯穿于网络信息安全的整个过程，在解决信息的机密性保护、可鉴别性、完整性保护和信息抗抵赖性等方面发挥着极其重要的作用。</p>
<p>密码编码学的主要任务是寻求有效密码算法和协议，以保证信息的机密性或认证性的方法。它主要研究密码算法的构造与设计，也就是密码体制的构造。它是密码理论的基础，也是保密系统设计的基础。</p>
<p>密码分析学的主要任务是研究加密信息的破译或认证信息的伪造。它主要是对密码信息的解析方法进行研究。</p>
<h3 id="2-密码学的五元组是什么他们分别有什么含义">2、密码学的五元组是什么？他们分别有什么含义？</h3>
<p>五元组为{M,C,K,E,D}。</p>
<p>消息空间M（又称明文空间）：所有可能明文m的集合；</p>
<p>密文空间C：所有可能密文c的集合；</p>
<p>密钥空间K：所有可能密钥k的集合，其中每一密钥k由加密密钥ke和解密<br>
密钥kd组成，即k＝（ke，kd）；</p>
<p>加密算法E：一簇由加密密钥控制的、从M到C的加密变换；</p>
<p>解密算法D：一簇由解密密钥可能固执的、从C到M的解密变换。</p>
<h3 id="3-密码分析主要有哪些形式各有何特点">3、密码分析主要有哪些形式？各有何特点？</h3>
<p>穷举攻击法又称为强力或蛮力（Brute force）攻击。这种攻击方法是对截获到的密文尝试遍历所有可能的密钥，直到获得了一种从密文到明文的可理解的转换。</p>
<p>统计分析攻击就是指密码分析者根据明文、密文和密钥的统计规律来破译密码的方法。</p>
<p>数学分析攻击是指密码分析者针对加解密算法的数学基础和某些密码学特性，通过数学求解的方法来破译密码。数学分析攻击是对基于数学难题的各种密码算法的主要威胁。</p>
<h3 id="4-kerchkoffs原则的基本内容是什么">4、Kerchkoffs原则的基本内容是什么？</h3>
<p>即使密码系统中的算法为密码分析者所知，也难以从截获的密文推导出明文或密钥。</p>
<p>也就是说，密码体制的安全性仅应依赖于对密钥的保密，而不应依赖于对算法的保密。</p>
<h3 id="5-一个密码系统实际可用的条件是什么">5、一个密码系统实际可用的条件是什么？</h3>
<p>系统的保密性不依赖于对加密体制或算法的保密，而仅依赖于密钥的安全性。</p>
<p>“一切秘密寓于密钥之中”是密码系统设计的一个重要原则。</p>
<p>满足实际安全性，使破译者取得密文后在有效时间和成本范围内，确定密钥或相应明文在计算上是不可行的。</p>
<p>加密和解密算法应适用于明文空间、密钥空间中的所有元素。</p>
<p>加密和解密算法能有效地计算，密码系统易于实现和使用。</p>
<h3 id="6-密码系统如何分类">6、密码系统如何分类？</h3>
<p>根据加密算法与解密算法所使用的密钥是否相同，可以将密码体制分为：</p>
<ul>
<li>对称密码体制（Symmetric cipher，也称为单钥密码体制、对称密钥密码体制或常规密码体制）</li>
<li>非对称密码体制（Asymmetric cipher，也称为公开密钥密码体制、非对称密钥密码体制）</li>
</ul>
<p>根据对明文信息的处理方式的处理方式，可将对称密码体制分为：</p>
<ul>
<li>分组密码（Block cipher）</li>
<li>序列密码（Stream cipher，也称为流密码）</li>
</ul>
<p>根据密码算法是否能进行可逆的加密变换，可以将密码体制分为：</p>
<ul>
<li>单向函数密码体制</li>
<li>双向变换密码体制</li>
</ul>
<h3 id="7-试比较对称密码体制和非对称密码体制">7、试比较对称密码体制和非对称密码体制</h3>
<p>对称密码体制的主要优势是：<br>
加密、解密运算的处理速度快，效率高，算法安全性高。<br>
对称密码体制存在的局限性或不足：</p>
<ol>
<li>对称密码算法的密钥分发过程复杂，所花代价高；</li>
<li>密钥管理困难；</li>
<li>保密通信系统的开放性差；</li>
<li>存在数字签名的困难性。</li>
</ol>
<p>非对称密码体制的主要优势是：</p>
<ol>
<li>密钥分配简单。</li>
<li>系统密钥量少，便于管理。</li>
<li>系统开放性好。</li>
<li>可以实现数字签名。</li>
</ol>
<p>非对称密码体制存在的局限性是加密、解密运算效率较低，处理速度较慢，同等安全强度下，非对称密码体制的密钥位数较多。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[C++] 北大MOOC综合大作业]]></title>
        <id>https://holmecat.github.io/post/[C++] 北大MOOC综合大作业/</id>
        <link href="https://holmecat.github.io/post/[C++] 北大MOOC综合大作业/">
        </link>
        <updated>2020-02-04T18:02:48.000Z</updated>
        <content type="html"><![CDATA[<h2 id="wow3fake">WOW3Fake</h2>
<p>之所以这么起名字，是因为，这是假的WOW3嘿嘿嘿<br>
项目传送门：<a href="https://github.com/HolmeCat/WOW3Fake">WOW3Fake</a></p>
<h2 id="项目背景程序设计与算法三魔兽世界3">项目背景：程序设计与算法（三）魔兽世界3</h2>
<p>本项目题目来自OpenJudge，北京大学MOOC程序设计实习的大作业<br>
感谢北大的相关老师设计此题，对于还在学习阶段的人具有C++的综合考察性质</p>
<h2 id="项目食用说明">项目食用说明</h2>
<p>具体代码和相关注释参见传送门，访问GitHub后打开main.cpp即可</p>
<h2 id="需求分析其实就是这道题的题干有点长">需求分析：其实就是这道题的题干，有点长</h2>
<h3 id="题目名称">题目名称</h3>
<p>魔兽世界三(开战) 总时间限制: 2000ms 内存限制: 65536kB<br>
来源：Guo Wei</p>
<h3 id="描述">描述</h3>
<p>魔兽世界的西面是红魔军的司令部，东面是蓝魔军的司令部。两个司令部之间是依次排列的若干城市，城市从西向东依次编号为1,2,3 .... N ( N &lt;= 20)。红魔军的司令部算作编号为0的城市，蓝魔军的司令部算作编号为N+1的城市。司令部有生命元，用于制造武士。</p>
<p>两军的司令部都会制造武士。武士一共有dragon 、ninja、iceman、lion、wolf 五种。每种武士都有编号、生命值、攻击力这三种属性。</p>
<p>双方的武士编号都是从1开始计算。红方制造出来的第n 个武士，编号就是n。同样，蓝方制造出来的第n 个武士，编号也是n。</p>
<p>武士在刚降生的时候有一个初始的生命值，生命值在战斗中会发生变化，如果生命值减少到0（生命值变为负数时应当做变为0处理），则武士死亡（消失）。</p>
<p>武士可以拥有武器。武器有三种，sword, bomb,和arrow，编号分别为0,1,2。</p>
<p>sword的攻击力是使用者当前攻击力的20%(去尾取整)。<br>
bomb的攻击力是使用者当前攻击力的40%(去尾取整)，但是也会导致使用者受到攻击，对使用者的攻击力是对敌人取整后的攻击力的1/2(去尾取整)。Bomb一旦使用就没了。<br>
arrow的攻击力是使用者当前攻击力的30%(去尾取整)。一个arrow用两次就没了。</p>
<p>武士降生后就朝对方司令部走，在经过的城市如果遇到敌人（同一时刻每个城市最多只可能有1个蓝武士和一个红武士），就会发生战斗。战斗的规则是：</p>
<p>在奇数编号城市，红武士先发起攻击 / 在偶数编号城市，蓝武士先发起攻击</p>
<p>战斗开始前，双方先对自己的武器排好使用顺序，然后再一件一件地按顺序使用。编号小的武器，排在前面。若有多支arrow，用过的排在前面。排好序后，攻击者按此排序依次对敌人一件一件地使用武器。如果一种武器有多件，那就都要用上。每使用一件武器，被攻击者生命值要减去武器攻击力。如果任何一方生命值减为0或小于0即为死去。有一方死去，则战斗结束。</p>
<p>双方轮流使用武器，甲用过一件，就轮到乙用。某一方把自己所有的武器都用过一轮后，就从头开始再用一轮。如果某一方没有武器了，那就挨打直到死去或敌人武器用完。武器排序只在战斗前进行，战斗中不会重新排序。</p>
<p>如果双方武器都用完且都还活着，则战斗以平局结束。如果双方都死了，也算平局。</p>
<p>有可能由于武士自身攻击力太低，而导致武器攻击力为0。攻击力为0的武器也要使用。如果战斗中双方的生命值和武器的状态都不再发生变化，则战斗结束，算平局。</p>
<p>战斗的胜方获得对方手里的武器。武士手里武器总数不超过10件。缴获武器时，按照武器种类编号从小到大缴获。如果有多件arrow，优先缴获没用过的。</p>
<p>如果战斗开始前双方都没有武器，则战斗视为平局。如果先攻击方没有武器，则由后攻击方攻击。</p>
<p>不同的武士有不同的特点。</p>
<p>编号为n的dragon降生时即获得编号为n%3 的武器。dragon在战斗结束后，如果还没有战死，就会欢呼。</p>
<p>编号为n的ninjia降生时即获得编号为n%3 和(n+1)%3的武器。ninja 使用bomb不会让自己受伤。</p>
<p>编号为n的iceman降生时即获得编号为n%3 的武器。iceman每前进一步，生命值减少10%(减少的量要去尾取整)。</p>
<p>编号为n的lion降生时即获得编号为n%3 的武器。lion 有“忠诚度”这个属性，其初始值等于它降生之后其司令部剩余生命元的数目。每前进一步忠诚度就降低K。忠诚度降至0或0以下，则该lion逃离战场,永远消失。但是已经到达敌人司令部的lion不会逃跑。lion在己方司令部可能逃跑。</p>
<p>wolf降生时没有武器，但是在战斗开始前会抢到敌人编号最小的那种武器。如果敌人有多件这样的武器，则全部抢来。Wolf手里武器也不能超过10件。如果敌人arrow太多没法都抢来，那就先抢没用过的。如果敌人也是wolf，则不抢武器。</p>
<p>以下是不同时间会发生的不同事件：</p>
<p>在每个整点，即每个小时的第0分， 双方的司令部中各有一个武士降生。</p>
<p>红方司令部按照iceman、lion、wolf、ninja、dragon 的顺序制造武士。</p>
<p>蓝方司令部按照lion、dragon、ninja、iceman、wolf 的顺序制造武士。</p>
<p>制造武士需要生命元。</p>
<p>制造一个初始生命值为m 的武士，司令部中的生命元就要减少m 个。</p>
<p>如果司令部中的生命元不足以制造某本该造的武士，那就从此停止制造武士。</p>
<p>在每个小时的第5分，该逃跑的lion就在这一时刻逃跑了。</p>
<p>在每个小时的第10分：所有的武士朝敌人司令部方向前进一步。即从己方司令部走到相邻城市，或从一个城市走到下一个城市。或从和敌军司令部相邻的城市到达敌军司令部。</p>
<p>在每个小时的第35分：在有wolf及其敌人的城市，wolf要抢夺对方的武器。</p>
<p>在每个小时的第40分：在有两个武士的城市，会发生战斗。</p>
<p>在每个小时的第50分，司令部报告它拥有的生命元数量。</p>
<p>在每个小时的第55分，每个武士报告其拥有的武器情况。</p>
<p>武士到达对方司令部后就算完成任务了，从此就呆在那里无所事事。</p>
<p>任何一方的司令部里若是出现了敌人，则认为该司令部已被敌人占领。</p>
<p>任何一方的司令部被敌人占领，则战争结束。战争结束之后就不会发生任何事情了。</p>
<p>给定一个时间，要求你将从0点0分开始到此时间为止的所有事件按顺序输出。事件及其对应的输出样例如下：</p>
<ol>
<li>
<p>武士降生</p>
<p>输出样例：000:00 blue dragon 1 born</p>
<p>表示在0点0分，编号为1的蓝魔dragon武士降生</p>
<p>如果造出的是lion，那么还要多输出一行，例:</p>
<p>000:00 blue lion 1 born</p>
<p>Its loyalty is 24</p>
<p>表示该lion降生时的忠诚度是24</p>
</li>
<li>
<p>lion逃跑</p>
<p>输出样例：000:05 blue lion 1 ran away</p>
<p>表示在0点5分，编号为1的蓝魔lion武士逃走</p>
</li>
<li>
<p>武士前进到某一城市</p>
<p>输出样例：</p>
<p>000:10 red iceman 1 marched to city 1 with 20 elements and force 30</p>
<p>表示在0点10分，红魔1号武士iceman前进到1号城市，此时他生命值为20,攻击力为30</p>
<p>对于iceman,输出的生命值应该是变化后的数值</p>
</li>
<li>
<p>wolf抢敌人的武器</p>
<p>000:35 blue wolf 2 took 3 bomb from red dragon 2 in city 4</p>
<p>表示在0点35分，4号城市中，红魔1号武士wolf 抢走蓝魔2号武士dragon 3个bomb。为简单起见，武器不写复数形式</p>
</li>
<li>
<p>报告战斗情况</p>
<p>战斗只有3种可能的输出结果：</p>
<p>000:40 red iceman 1 killed blue lion 12 in city 2 remaining 20 elements</p>
<p>表示在0点40分，1号城市中，红魔1号武士iceman 杀死蓝魔12号武士lion后，剩下生命值20</p>
<p>000:40 both red iceman 1 and blue lion 12 died in city 2</p>
<p>注意，把红武士写前面</p>
<p>000:40 both red iceman 1 and blue lion 12 were alive in city 2</p>
<p>注意，把红武士写前面</p>
</li>
<li>
<p>武士欢呼</p>
<p>输出样例：003:40 blue dragon 2 yelled in city 4</p>
</li>
<li>
<p>武士抵达敌军司令部</p>
<p>输出样例：001:10 red iceman 1 reached blue headquarter with 20 elements and force 30</p>
<p>（此时他生命值为20,攻击力为30）对于iceman,输出的生命值和攻击力应该是变化后的数值</p>
</li>
<li>
<p>司令部被占领</p>
<p>输出样例：003:10 blue headquarter was taken</p>
</li>
<li>
<p>司令部报告生命元数量</p>
<p>000:50 100 elements in red headquarter</p>
<p>000:50 120 elements in blue headquarter</p>
<p>表示在0点50分，红方司令部有100个生命元，蓝方有120个</p>
</li>
<li>
<p>武士报告情况</p>
<p>000:55 blue wolf 2 has 2 sword 3 bomb 0 arrow and 7 elements</p>
<p>为简单起见，武器都不写复数形式。elements一律写复数，哪怕只有1个</p>
<p>交代武器情况时，次序依次是：sword,bomb, arrow。</p>
</li>
</ol>
<p>输出事件时：</p>
<p>首先按时间顺序输出；</p>
<p>同一时间发生的事件，按发生地点从西向东依次输出. 武士前进的事件, 算是发生在目的地。</p>
<p>在一次战斗中有可能发生上面的 5 至 6 号事件。这些事件都算同时发生，其时间就是战斗开始时间。一次战斗中的这些事件，序号小的应该先输出。</p>
<p>两个武士同时抵达同一城市，则先输出红武士的前进事件，后输出蓝武士的。</p>
<p>对于同一城市，同一时间发生的事情，先输出红方的，后输出蓝方的。</p>
<p>显然，8号事件发生之前的一瞬间一定发生了7号事件。输出时，这两件事算同一时间发生，但是应先输出7号事件</p>
<p>虽然任何一方的司令部被占领之后，就不会有任何事情发生了。但和司令部被占领同时发生的事件，全都要输出。</p>
<h2 id="输入">输入</h2>
<p>第一行是t,代表测试数据组数，每组样例共三行。</p>
<p>第一行，4个整数 M,N,K, T。其含义为：<br>
每个司令部一开始都有M个生命元( 1 &lt;= M &lt;= 100000)<br>
两个司令部之间一共有N个城市( 1 &lt;= N &lt;= 20 )<br>
lion每前进一步，忠诚度就降低K。(0&lt;=K&lt;=100)<br>
要求输出从0时0分开始，到时间T为止(包括T) 的所有事件。T以分钟为单位，0 &lt;= T &lt;= 6000</p>
<p>第二行：五个整数，依次是 dragon 、ninja、iceman、lion、wolf 的初始生命值。它们都大于0小于等于200</p>
<p>第三行：五个整数，依次是 dragon 、ninja、iceman、lion、wolf 的攻击力。它们都大于0小于等于200</p>
<h2 id="输出">输出</h2>
<p>对每组数据，先输出一行：</p>
<p>Case n:</p>
<p>如对第一组数据就输出 Case 1:</p>
<p>然后按恰当的顺序和格式输出到时间T为止发生的所有事件。每个事件都以事件发生的时间开头，时间格式是“时: 分”，“时”有三位，“分”有两位。</p>
<h3 id="样例输入">样例输入</h3>
<p>1<br>
20 1 10 400<br>
20 20 30 10 20<br>
5 5 5 5 5</p>
<h3 id="样例输出">样例输出</h3>
<p>Case 1:<br>
000:00 blue lion 1 born<br>
Its loyalty is 10<br>
000:10 blue lion 1 marched to city 1 with 10 elements and force 5<br>
000:50 20 elements in red headquarter<br>
000:50 10 elements in blue headquarter<br>
000:55 blue lion 1 has 0 sword 1 bomb 0 arrow and 10 elements<br>
001:05 blue lion 1 ran away<br>
001:50 20 elements in red headquarter<br>
001:50 10 elements in blue headquarter<br>
002:50 20 elements in red headquarter<br>
002:50 10 elements in blue headquarter<br>
003:50 20 elements in red headquarter<br>
003:50 10 elements in blue headquarter<br>
004:50 20 elements in red headquarter<br>
004:50 10 elements in blue headquarter<br>
005:50 20 elements in red headquarter<br>
005:50 10 elements in blue headquarter</p>
<h3 id="提示">提示</h3>
<p>请注意浮点数精度误差问题。OJ上的编译器编译出来的可执行程序，在这方面和你电脑上执行的程序很可能会不一致。5 ×0.3 的结果，有的机器上可能是 15.00000001，去尾取整得到15,有的机器上可能是14.9999999，去尾取整后就变成14。因此,本题不要写 5 × 0.3，要写 5 × 3 / 10。</p>
<h2 id="项目设计说明以及小结">项目设计说明以及小结</h2>
<p>有一说一，这个作业是在此文写作半年前做的，当时还没有什么记录，现在重新整理出来，本身软件工程学的也比较烂，所以就没有进行很复杂的设计说明，仅提供代码和简单说明</p>
<p>具体的可以参考代码和相关注释，网上也有很多这道题的解题报告，不过可能思路多有一定差异</p>
<h3 id="概要设计思路">概要设计思路</h3>
<p>整体的解题方法就是依照题意一层层剖析，依照面向对象的设计模式进行编码设计。</p>
<p>武器，武士都是设计一个基类，多个具体的派生类，然后实践虚函数来达到目的。</p>
<p>设计城市类City，用于程序推演时实例化那十几个坐标城市对象。每个城市中，有两个指针指向null或者停留在城市的红方蓝方武士对象，城市中具体发生的活动设计为函数。</p>
<p>最后，有一个大的事件类Event，里面管理城市数组，以及依照时间先后来安排调度事件的发生，调用对应城市相关的函数。</p>
<p>Main方法仅进行事件类的初始化和销毁工作，依照输入输出要求进行一些相关控制。</p>
<p>其他相关细节都在各函数实现当中，属于详细设计，在此不详述。<s>因为不记得了</s></p>
<h3 id="小结">小结</h3>
<p>这道题的结构比较复杂，虽然作为一道在线的判题，但是量还是算很大了。难度上只是作为C++知识的综合考察，包含了C的结构化设计，C++类与对象，STL的初步知识（Vector），是程序语言题不涉及数据结构和算法的应用。调试的时候因为数据很大，所以需要使用文件读入先行测试。一道题不可能考到C++的方方面面，也没有深入到一些进阶模块，但是对于C++的基础而言这道题算是很全面了。</p>
<p>做题过程中，初期确实也在纸上画了一些简单的相关的设计图，否则做到后面确实会很混乱。到后期还是有一些先行设计上的缺陷，只能用一些面向过程的解决方法。</p>
<p>这道题我认为，最大的难点在于逻辑和仔细，因为输出格式要求和较大的输出量，在线判题又是很严格的，所以到最后我用了Beyond Compare进行文件对比才找到最后三个马大哈的地方。</p>
<figure data-type="image" tabindex="1"><img src="https://holmecat.github.io//post-images/1580881139435.png" alt="通过啦.jpg" loading="lazy"></figure>
<h4 id="20226月更新">2022.6月更新</h4>
<p>复习C++知识，再次回顾了这个项目</p>
<p>总结一下，里面的设计问题还是很多的，仅是从逻辑功能上满足了要求。C++当中面向对象的设计，耦合度的控制都有一定的设计，但是如果进行以此代码重构肯定能减少不少的代码量，有些代码还是有冗杂的，重复编写没有进行复用。</p>
<p>时隔几年再看，确实能感受到自身的进步，通过正视过往代码的不足，也是能更加增进对程序设计的理解。</p>
]]></content>
    </entry>
</feed>